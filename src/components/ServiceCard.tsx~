import React from 'react';
import { Service } from '@/types/services';
import { cn } from '@/utils/cn';

interface ServiceCardProps {
  service: Service;
  onSelectService?: (serviceId: string) => void;
  className?: string;
}
const PLACEHOLDER_400x300 =
  'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="400" height="300"><rect width="100%" height="100%" fill="%23e5e7eb"/></svg>';

const cxW = (u: string, w: number) =>
  u.includes('/upload/') ? u.replace('/upload/', `/upload/f_auto,q_auto,w_${w}/`) : u;

const ServiceCard: React.FC<ServiceCardProps> = ({
  service,
  onSelectService,
  className = ''
}) => {
  const handleCtaClick = () => {
    if (onSelectService) {
      onSelectService(service.id);
      return;
    } // <-- missing brace fixed

    switch (service.cta.type) {
      case 'email':
        window.location.href = `mailto:${service.cta.href}?subject=Inquiry about ${service.title}`;
        break;
      case 'phone':
        window.location.href = `tel:${service.cta.href}`;
        break;
      case 'link':
        window.open(service.cta.href, '_blank', 'noopener noreferrer');
        break;
      default:
        window.location.href = service.cta.href;
    }
  };

  const img = service.image;

  return (
    <div
      className={cn(
        'bg-white rounded-sm border-2 border-blue-600 p-8 hover:shadow-lg transition-all duration-300',
        'hover:-translate-y-2 hover:shadow-blue-200 group relative',
        service.popular && 'ring-2 ring-blue-600 ring-offset-4',
        className
      )}
    >
      {service.popular && (
        <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
          <span className="bg-blue-600 text-white px-4 py-1 text-sm font-semibold rounded-sm">Most Popular</span>
        </div>
      )}

      <img
        loading="lazy"
        decoding="async"
        width={400}
        height={300}
        src={img ? cxW(img, 400) : PLACEHOLDER_400x300}
        {...(img
          ? {
              srcSet: `${cxW(img, 400)} 400w, ${cxW(img, 800)} 800w`,
              sizes: '(max-width: 400px) 100vw, 400px',
            }
          : {})}
        alt={service.title ?? 'Service'}
        className="rounded-lg shadow-md object-cover w-full h-auto mb-6"
        onError={(e) => {
          (e.currentTarget as HTMLImageElement).src = PLACEHOLDER_400x300;
          (e.currentTarget as HTMLImageElement).removeAttribute('srcset');
        }}
      />

      <div className="text-center mb-6">
        <h3 className="text-2xl font-bold text-gray-900 mb-4 group-hover:text-blue-600 transition-colors">
          {service.title}

<div className="text-center mb-6">
        <h3 className="text-2xl font-bold text-gray-900 mb-4 group-hover:text-blue-600 transition-colors">
          {service.title}
        </h3>
        <p className="text-gray-600 text-lg leading-relaxed mb-6">{service.description}</p>

        <div className="text-center mb-6">
          <span className="text-3xl font-bold text-blue-600">
            {service.price?.currency || '$'}
            {(service.price?.starting || 0).toLocaleString()}
          </span>
          {service.price?.period && <span className="text-gray-500 text-lg">/{service.price.period}</span>}
          <p className="text-sm text-gray-500 mt-1">Starting price</p>
        </div>
      </div>

      {/* Dual CTA Buttons */}
      <div className="flex flex-col gap-3">

          href={`/pricing#${service.id}`}
          className={cn(
            'w-full text-center bg-blue-600 text-white font-semibold py-4 px-6 rounded-sm',
            'hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',
            'transition-colors duration-200 text-lg'
          )}
        >
          View Pricing
        </a>

          href="/quote"
          className={cn(
            'w-full text-center bg-gray-100 text-gray-700 font-semibold py-4 px-6 rounded-sm',
            'hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2',
            'transition-colors duration-200 text-lg border-2 border-gray-300'
          )}
        >
          Contact Us
        </a>
      </div>





        onClick={handleCtaClick}
        className={cn(
          'w-full bg-blue-600 text-white font-semibold py-4 px-6 rounded-sm',
          'hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',
          'transition-colors duration-200 text-lg'
        )}
      >
        {service.cta.text}
      </button>
    </div>
  );
};

export default ServiceCard;
